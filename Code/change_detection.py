# -*- coding: utf-8 -*-
"""change_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UFh5Ti8YGXtopyCN97eIBss3HYl7WDxn
"""

#Libraries:
from osgeo import gdal
import os
import numpy as np

#Directory
directory = 'C:/images/'
os.chdir(directory)

#N value and NDVI raster
n = 1.75
raster1 = gdal.Open('ndvi_2015_aoi.tif', 1)
raster2 = gdal.Open('ndvi_2018_aoi.tif', 1)
cols = raster1.RasterXSize
rows = raster1.RasterYSize

#Load the bands as arrays
raster1_band = raster1.GetRasterBand(1)
raster1_data = raster1_band.ReadAsArray()
raster2_band = raster2.GetRasterBand(1)
raster2_data = raster2_band.ReadAsArray()

#Change vector
cv = raster1_data - raster2_data
#Mean and sd
cv_mean = np.mean(cv)
cv_std = np.std(cv)
#upper and lower thresholds 
umbral_s = cv_mean + n*cv_std
umbral_i = cv_mean - n*cv_std

#Change matrix
#Zero value by default
cd = np.zeros((rows, cols))
#Identify the kind of change
cd[(cv <= umbral_i)] = 1
cd[(cv >= umbral_s)] = 2

#Get the result as a raster
base = 'CV_NDVI'
driver = raster1.GetDriver()
outImag = driver.Create(base + '_'+str(n)+'std.tif', cols, rows, 1, gdal.GDT_Byte)
src = raster1.GetProjectionRef()
outImag.SetProjection(src)
gt = raster1.GetGeoTransform()
outImag.SetGeoTransform(gt)
outBandImag = outImag.GetRasterBand(1)
outDataImag = cd
outBandImag.WriteArray(outDataImag)
outBandImag.FlushCache()
del outImag